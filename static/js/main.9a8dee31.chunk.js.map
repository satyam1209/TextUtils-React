{"version":3,"sources":["components/About.js","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","mystyle","setmystyle","_useState3","_useState4","btntext","setbtntext","react_default","a","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","onClick","border","Navbar","props","concat","mode","href","title","aria-label","aria-current","cursor","tooglemode","role","htmlFor","Textform","text","setText","heading","value","onChange","event","target","rows","length","showalert","newtext","toUpperCase","charAt","slice","split","join","Alert","word","alert","msg","defaultProps","App","Mode","setMode","setalert","showAlert","message","setTimeout","Fragment","react_router_dom","document","body","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9a8dee31.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function About() {\r\n  const[mystyle,setmystyle]= useState({\r\n    color: 'black',\r\n    backgroundColor:\"white\"\r\n  })\r\n  const[btntext,setbtntext]=useState(\"Disable Dark Mode\")\r\n  const darkmode=()=>{\r\n    if (mystyle.color === 'white'){\r\n      setmystyle({\r\n        color:'black',\r\n        backgroundColor:'white'\r\n        \r\n      })\r\n      setbtntext(\"Enable Dark Mode\")\r\n    }\r\n    else{\r\n      setmystyle({\r\n        color: 'white',\r\n    backgroundColor:\"black\",\r\n    border:'1px solid white'\r\n      })\r\n      setbtntext(\"Disable Dark Mode\")\r\n\r\n    }\r\n  }\r\n  return (\r\n    <div className='container' style={mystyle}>\r\n        <h1>About us...</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\" style={mystyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" style={mystyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={mystyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" style={mystyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\"style={mystyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" style={mystyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div className=\"container my-3\">\r\n<button type='button' className='btn btn-primary my-3' onClick={darkmode}>{btntext}</button>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <a className=\"nav-link\" href=\"/about\">About</a>\r\n        </li>\r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode===\"light\"?'dark':'light'}`}>\r\n      <input className=\"form-check-input\" style={{cursor:'pointer'}} type=\"checkbox\" onClick={props.tooglemode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label\"  htmlFor=\"flexSwitchCheckDefault\">{`${props.mode==='light'?\"Enable\":'Disable'} Dark Mode`}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\nNavbar.propTypes={title: PropTypes.string.isRequired}\r\nNavbar.defaultProps={\r\n    title:\"set title here\"\r\n};","import React,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n  const wordcount=()=>{\r\n     let regex=/\\s+\\S+/;\r\n     let newtext=text.split(regex)\r\n     return newtext.length\r\n  }\r\n    const handleExtraClick=()=>{\r\n      if (text.length===0){\r\n        props.showalert(\"Enter something First\",\"warning\")\r\n      }\r\n      else{\r\n        let newtext=text.split(/[ ]+/);\r\n        \r\n        setText(newtext.join(\" \"))\r\n        props.showalert(\"removed Extra Spaces\",\"success\")\r\n      }\r\n     }\r\n     \r\n    const handleUpClick=()=>{\r\n      if (text.length===0){\r\n        props.showalert(\"Enter something First\",\"warning\")\r\n      }\r\n      else{\r\n        // changing text to uppercase\r\n        let newtext=text.toUpperCase();\r\n        // setting newtext to the textarea\r\n        setText(newtext);\r\n        props.showalert(\"Text converted to UPPERCASE\",\"success\")\r\n      }\r\n    }\r\n    const handleClearClick=()=>{\r\n      if (text.length===0){\r\n        props.showalert(\"Enter something First\",\"warning\")\r\n      }\r\n      else{\r\n      setText(\"\");\r\n      props.showalert(\"Text cleared\",\"success\")\r\n    }\r\n  }\r\n    const handleCapClick=()=>{\r\n      if (text.length===0){\r\n        props.showalert(\"Enter something First\",\"warning\")\r\n      }\r\n      else{\r\n      let newtext=text.charAt(0).toUpperCase() + text.slice(1);\r\n      setText(newtext);\r\n      props.showalert(\"converted to capital\",\"success\")\r\n    }\r\n  }\r\n    \r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"onchange\");\r\n        // it allows us to write the text\r\n        setText(event.target.value);\r\n    }\r\n    const[text,setText]=useState(\"\");\r\n  return (\r\n    <div>\r\n      <div className={`container text-${props.mode===\"light\"?'dark':'light'}`}><h1>{props.heading}</h1></div>\r\n        \r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control my-2\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'grey',color:props.mode==='light'?'black':'white'}} id=\"mytext\" rows=\"6\"></textarea>\r\n  <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleCapClick}>Convert to Capatilize</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear text</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleExtraClick}>Clear Spaces</button>\r\n</div>\r\n<div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n  <h2>Your Text Summary</h2>\r\n  <p>{text.length===0?0:wordcount(text)}words and {text.length} characters</p>\r\n  <p>{text.length>0?0.008*text.length/8:0.000} Minutes read</p>\r\n  <h2>Preview</h2>\r\n  <p>{text.length>0?text:\"Enter something to preview\"}</p>\r\n\r\n  </div>\r\n  </div>\r\n  \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capatalize=(word)=>{\r\n        let ans=word.charAt(0).toUpperCase()+word.slice(1)\r\n        return ans\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capatalize(props.alert.type)}</strong> {props.alert.msg}\r\n  {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n</div>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React,{useState} from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n// import Switch from \"react-router-dom\";\nfunction App() {\n  const [Mode,setMode] = useState('light');\n  const tooglemode=()=>{\n    if (Mode==='light'){\n      setMode(\"dark\");\n      document.title=\"TextUtils-DarkMode\"\n      setTimeout(() => {\n        document.title=\"TextUtils-Home\"\n      }, 1000);\n      document.body.style.backgroundColor='grey';\n      showAlert(\"Dark mode Enabled\",\"success\")\n      \n    }\n    else{\n      setMode(\"light\");\n      document.title=\"TextUtils-LightMode\"\n      setTimeout(() => {\n        document.title=\"TextUtils-Home\"\n      }, 1000);\n      \n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"Light mode Enabled\",\"success\")\n    }\n\n  }\n  const [alert,setalert] = useState(null)\n  const showAlert=(message,type)=>{\n   setalert({\n    msg: message,\n    type:type\n   })\n   setTimeout(() => {\n    setalert(null);\n   }, 1000);\n  }\n  return (\n    <>\n    <Router>\n<Navbar title=\"Textutils\" mode={Mode} tooglemode={tooglemode}></Navbar>\n\n<Alert alert={alert}></Alert>\n\n<div className=\"container my-3\">\n<Switch>\n          <Route  exact path=\"/about\">\n          <About></About>\n          </Route>\n          <Route exact path=\"/\">\n          <Textform heading=\"Enter Text Here...\" mode={Mode} showalert={showAlert}></Textform>\n          </Route>\n        </Switch>\n  \n</div>\n</Router>\n\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}